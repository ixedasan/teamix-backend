# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthModel {
  message: String
  user: UserModel
}

input ChangeEmailInput {
  email: String!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input ChangeProfileInfoInput {
  bio: String
  displayName: String!
  username: String!
}

input ChangeRoleInput {
  projectId: String!
  role: String!
  userId: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DeviceModel {
  browser: String!
  os: String!
  type: String!
}

input EnableTotpInput {
  pin: String!
  secret: String!
}

input InviteMemberInput {
  email: String!
  role: String!
}

type LocationModel {
  city: String!
  country: String!
  latitude: Float!
  longitude: Float!
}

input LoginInput {
  login: String!
  password: String!
  pin: String
}

type MemberModel {
  createdAt: DateTime!
  id: ID!
  projectId: ID!
  role: String!
  updatedAt: DateTime!
  userId: ID!
}

type Mutation {
  acceptProjectInvitation(token: String!): Boolean!
  changeEmail(data: ChangeEmailInput!): Boolean!
  changeMemberRole(data: ChangeRoleInput!): Boolean!
  changePassword(data: ChangePasswordInput!): Boolean!
  changeProfileAvatar(avatar: Upload!): Boolean!
  changeProfileInfo(data: ChangeProfileInfoInput!): Boolean!
  changeProjectCover(cover: Upload!, projectId: String!): Boolean!
  clearSessionCookie: Boolean!
  createProject(data: ProjectInput!): Boolean!
  createSocialLink(data: SocialLinkInput!): Boolean!
  createUser(data: CreateUserInput!): Boolean!
  deleteProject(projectId: String!): Boolean!
  disableTotp: Boolean!
  enableTotp(data: EnableTotpInput!): Boolean!
  inviteProjectMember(data: InviteMemberInput!, projectId: String!): Boolean!
  loginUser(data: LoginInput!): AuthModel!
  logoutUser: Boolean!
  newPassword(data: NewPasswordInput!): Boolean!
  removeProfileAvatar: Boolean!
  removeProjectCover(projectId: String!): Boolean!
  removeProjectMember(projectId: String!, userId: String!): Boolean!
  removeSession(id: String!): Boolean!
  removeSocialLink(id: String!): Boolean!
  reorderSocialLink(list: [SocialLinkOrderInput!]!): Boolean!
  resetPassword(data: ResetPasswordInput!): Boolean!
  updateProject(data: ProjectInput!, projectId: String!): Boolean!
  updateSocialLink(data: SocialLinkInput!, id: String!): Boolean!
  verifyAccaunt(data: VerificationInput!): UserModel!
}

input NewPasswordInput {
  password: String!
  passwordConfirmation: String!
  token: String!
}

input ProjectInput {
  description: String
  name: String!
}

type ProjectModel {
  cover: String
  createdAt: DateTime!
  description: String
  id: ID!
  members: [MemberModel!]!
  name: String!
  updatedAt: DateTime!
}

type Query {
  findCurrentSession: SessionModel!
  findProfile: UserModel!
  findSessionsByUser: [SessionModel!]!
  findSocialLinks: [SocialLinksModel!]!
  generateTotpSecret: TotpModel!
  getAllUserProjects: [ProjectModel!]!
  getProjectMembers(projectId: String!): [MemberModel!]!
}

input ResetPasswordInput {
  email: String!
}

type SessionMetadataModel {
  device: DeviceModel!
  ip: String!
  location: LocationModel!
}

type SessionModel {
  createdAt: String!
  id: ID!
  metadata: SessionMetadataModel!
  userId: String!
}

input SocialLinkInput {
  title: String!
  url: String!
}

input SocialLinkOrderInput {
  id: String!
  position: Float!
}

type SocialLinksModel {
  createdAt: DateTime!
  id: ID!
  position: Float!
  title: String!
  updatedAt: DateTime!
  url: String!
  userId: String!
}

type TotpModel {
  qrCodeUrl: String!
  secret: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UserModel {
  avatar: String
  bio: String
  createdAt: DateTime!
  displayName: String!
  email: String!
  id: ID!
  isEmailVerified: Boolean!
  isTotpEnabled: Boolean!
  isVerified: Boolean!
  password: String!
  socialLinks: [SocialLinksModel!]!
  totpSecret: String
  updatedAt: DateTime!
  username: String!
}

input VerificationInput {
  token: String!
}